{"meta":{"title":"Hanke's Blog","subtitle":"心之所向，素履以往","description":"","author":"Hanke","url":"http://hanke8.cloud","root":"/"},"pages":[{"title":"about","date":"2021-05-12T07:06:48.000Z","updated":"2021-05-12T07:20:41.064Z","comments":false,"path":"about/index.html","permalink":"http://hanke8.cloud/about/index.html","excerpt":"","text":"个人主页~ 第一章 · 内容 ~第二章 ·内容"},{"title":"","date":"2021-05-11T15:21:13.968Z","updated":"2021-05-11T15:21:13.968Z","comments":false,"path":"tags/index.html","permalink":"http://hanke8.cloud/tags/index.html","excerpt":"","text":""},{"title":"","date":"2021-05-11T15:23:01.706Z","updated":"2021-05-11T15:23:01.706Z","comments":false,"path":"categories/index.html","permalink":"http://hanke8.cloud/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"叶子相似的树—二叉树dfs遍历","slug":"叶子相似的树—二叉树dfs遍历","date":"2021-05-12T13:49:33.000Z","updated":"2021-05-12T15:09:47.935Z","comments":true,"path":"2021/05/12/叶子相似的树—二叉树dfs遍历/","link":"","permalink":"http://hanke8.cloud/2021/05/12/%E5%8F%B6%E5%AD%90%E7%9B%B8%E4%BC%BC%E7%9A%84%E6%A0%91%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91dfs%E9%81%8D%E5%8E%86/","excerpt":"","text":"题目描述请考虑一棵二叉树上所有的叶子，这些叶子的值按从左到右的顺序排列形成一个 叶值序列 。 举个例子，如上图所示，给定一棵叶值序列为 (6, 7, 4, 9, 8) 的树。 如果有两棵二叉树的叶值序列是相同，那么我们就认为它们是 叶相似 的。 如果给定的两个根结点分别为 root1 和 root2 的树是叶相似的，则返回 true；否则返回 false 。 解题思路解法：dfs判断叶子结点的方法：当前结点不为空，且左右结点均为空。 代码12345678910111213141516171819202122232425262728class Solution &#123;public: vector&lt;int&gt; v1,v2; void dfs(TreeNode* root, int type) &#123; if(root &amp;&amp; !(root-&gt;left) &amp;&amp; !(root-&gt;right)) &#123; if(type==1) v1.push_back(root-&gt;val); else if(type==2) v2.push_back(root-&gt;val); return; &#125; if(root-&gt;left) dfs(root-&gt;left, type); if(root-&gt;right) dfs(root-&gt;right, type); &#125; bool leafSimilar(TreeNode* root1, TreeNode* root2) &#123; dfs(root1, 1); dfs(root2, 2); int len = v1.size(); if(len != v2.size()) return false; for(int i=0; i&lt;len; i++) &#123; if(v1[i]!=v2[i]) return false; &#125; return true; &#125;&#125;;","categories":[{"name":"力扣题解","slug":"力扣题解","permalink":"http://hanke8.cloud/categories/%E5%8A%9B%E6%89%A3%E9%A2%98%E8%A7%A3/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://hanke8.cloud/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"“我的第一篇博客文章”","slug":"“我的第一篇博客文章”","date":"2021-05-11T17:22:36.000Z","updated":"2021-05-12T15:08:35.106Z","comments":true,"path":"2021/05/12/“我的第一篇博客文章”/","link":"","permalink":"http://hanke8.cloud/2021/05/12/%E2%80%9C%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E2%80%9D/","excerpt":"","text":"第一章内容 第二章内容","categories":[{"name":"随笔","slug":"随笔","permalink":"http://hanke8.cloud/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"杂文","slug":"杂文","permalink":"http://hanke8.cloud/tags/%E6%9D%82%E6%96%87/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-05-11T14:41:11.754Z","updated":"2021-05-11T15:29:07.849Z","comments":true,"path":"2021/05/11/hello-world/","link":"","permalink":"http://hanke8.cloud/2021/05/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 的撒大C的撒的撒1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Gen的撒1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"力扣题解","slug":"力扣题解","permalink":"http://hanke8.cloud/categories/%E5%8A%9B%E6%89%A3%E9%A2%98%E8%A7%A3/"},{"name":"随笔","slug":"随笔","permalink":"http://hanke8.cloud/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://hanke8.cloud/tags/%E7%AE%97%E6%B3%95/"},{"name":"杂文","slug":"杂文","permalink":"http://hanke8.cloud/tags/%E6%9D%82%E6%96%87/"}]}